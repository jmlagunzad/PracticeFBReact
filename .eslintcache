[{"C:\\Users\\may02\\Desktop\\React Practice\\type-chat-app\\src\\App.tsx":"1","C:\\Users\\may02\\Desktop\\React Practice\\type-chat-app\\src\\reportWebVitals.ts":"2","C:\\Users\\may02\\Desktop\\React Practice\\type-chat-app\\src\\index.tsx":"3","C:\\Users\\may02\\Desktop\\React Practice\\type-chat-app\\src\\components\\Modal.js":"4","C:\\Users\\may02\\Desktop\\React Practice\\type-chat-app\\src\\About.js":"5","C:\\Users\\may02\\Desktop\\React Practice\\type-chat-app\\src\\components\\navbar.jsx":"6"},{"size":10204,"mtime":1609903145209,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1608177697663,"results":"9","hashOfConfig":"8"},{"size":588,"mtime":1609746456223,"results":"10","hashOfConfig":"8"},{"size":1389,"mtime":1608622461026,"results":"11","hashOfConfig":"8"},{"size":273,"mtime":1609811821295,"results":"12","hashOfConfig":"8"},{"size":1016,"mtime":1609811653881,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"q1e3np",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"C:\\Users\\may02\\Desktop\\React Practice\\type-chat-app\\src\\App.tsx",["30","31","32","33","34"],"import './App.css';\nimport React from \"react\";\nimport axios from \"axios\";\nimport About from './About';\n\nimport {Link} from 'react-router-dom';\n\n//import Modal from \"./components/Modal.js\"\n\nconst {useState, useEffect} = React;\n\n\n// {\"results\":[{\"gender\":\"female\",\"name\":{\"title\":\"Mrs\",\"first\":\"Consuelo\",\"last\":\"Gonzalez\"},\n// \"location\":{\"street\":{\"number\":714,\"name\":\"Calle del Barquillo\"},\n// \"city\":\"San Sebastián de Los Reyes\",\"state\":\"Castilla y León\",\n// \"country\":\"Spain\",\"postcode\":61623,\n// \"coordinates\":{\"latitude\":\"-24.5486\",\"longitude\":\"35.5618\"},\n// \"timezone\":{\"offset\":\"+6:00\",\"description\":\"Almaty, Dhaka, Colombo\"}},\n// \"email\":\"consuelo.gonzalez@example.com\",\n// \"login\":{\"uuid\":\"456c1cc5-99f9-4308-9e5a-f201d6dc7b2c\",\n// \"username\":\"redwolf249\",\"password\":\"elizabet\",\"salt\":\"L0MmcFu6\",\"md5\":\"c31c8e693f9d0eb9898edf1860270286\",\n// \"sha1\":\"7789c57d1be0c59598d2757b450d83600e84a4ca\",\"sha256\":\"100c0f16cae04cf3700f9b566253af2e5577d5596500a9e58dc83b13824b1e08\"},\n// \"dob\":{\"date\":\"1947-03-20T12:59:06.945Z\",\"age\":73},\"registered\":{\"date\":\"2003-09-28T06:41:38.121Z\",\"age\":17},\n// \"phone\":\"938-846-175\",\"cell\":\"607-138-970\",\"id\":{\"name\":\"DNI\",\"value\":\"22275854-M\"},\n// \"picture\":{\"large\":\"https://randomuser.me/api/portraits/women/78.jpg\",\"medium\":\"https://randomuser.me/api/portraits/med/women/78.jpg\",\n// \"thumbnail\":\"https://randomuser.me/api/portraits/thumb/women/78.jpg\"},\"nat\":\"ES\"}\n\ninterface UserName{\n  first: string;\n  last: string;\n  title: string;\n}\n\ninterface UserPicture{\n  thumbnail: string;\n}\n\ninterface UserInfo{\n  name: UserName;\n  picture: UserPicture;\n}\n\ninterface UserList{\n  users: UserInfo[];\n}\n\ninterface Item{\n  name: string;\n  price: number;\n}\n\ninterface ItemList{\n  items: Item[];\n}\n\n\n// [{\"id\":0,\"word\":\"rice-milk\"},{\"id\":0,\"word\":\"undertows\"},{\"id\":0,\"word\":\"tythe\"},{\"id\":0,\"word\":\"forebodings\"}]\n\ninterface Post{\n  id: number;\n  word: string;\n}\n\nconst fetchRandomData = (url: string) => {\n    return axios.get(url)\n    .then( ({ data }) => {\n      // handle success\n      console.log(data);\n      return data;\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    })\n}\n\nconst UserTab = ({ name, picture } : UserInfo)  => {\n  return(\n    <div>\n      <img src={picture.thumbnail}/>\n      <Link to={`/about/${name.first} ${name.last}`}>{name.first + ' ' + name.last}</Link>\n    </div>\n  );\n}\n\nconst ChatList = ({ users } : UserList) => {\n\n    return(\n      <div>\n         {users.map((user: UserInfo, idx: number) => {\n              return <UserTab \n                        key={idx} \n                        name={user.name}\n                        picture={user.picture}\n                        />\n          }\n        )}\n      </div>\n    )\n}\n\nexport default function App() {\n\n  const [users, setUsers] = useState([]);\n  const [postText, setPostText] = useState('');\n  const [posts, setPosts] = useState<Post[]>([]);\n  const [editMode, setEditMode] = useState(false);\n  const [tempPost, setTempPost] = useState('');\n  const [editPostId, setEditPostId] = useState(0);\n  const [profilePicture, setProfilePicture] = useState('');\n  // const [editModal, setEditModal] = useState(false);\n  // const [currPost, setCurrPost] = useState([0,'']);\n\n  useEffect(() => {\n    fetchRandomData('https://randomuser.me/api/?results=10').then(randomData => {\n      setUsers(randomData.results);\n    });\n\n    fetchRandomData('http://api.wordnik.com/v4/words.json/randomWords?limit=4&api_key=a2a73e7b926c924fad7001ca3111acd55af2ffabf50eb4ae5')\n    .then(randomData => {\n      setPosts(randomData);\n      // console.log(randomData)\n      // console.log(randomData[0])\n    });\n\n    fetchRandomData('/items/')\n    .then(randomData => {\n      randomData.map( (item: Item, idx: number) => {\n        console.log(`Item ${idx + 1} is ${item.name} with price of ${item.price}`)\n      }\n\n      )\n      // console.log(randomData)\n      // console.log(randomData[0])\n    });\n\n  \n    //\n  }, []);\n\n  // const changeImage = (e : Event) =>{\n  //   if (e.target.files && e.target.files[0]) {\n  //     setProfilePicture(URL.createObjectURL(e.target.files[0]))\n  //   }\n  // }\n\n\n  return (\n    \n      <div className=\"App\">\n      {/* <NavBar/> */}\n      \n      <div className=\"body\">\n        <br/>\n        <div className=\"row\">\n          <div className=\"col-3\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                \n                {\n                  profilePicture === '' ? ( \n                  <div>\n                    Upload a profile picture<br/><br/>\n                    <input type=\"file\" onChange={ e => {\n                      if (e.target.files && e.target.files[0]) {\n                          setProfilePicture(URL.createObjectURL(e.target.files[0]))\n                        }\n                      } \n                    }/>\n                  </div>) : <img id=\"target\" src={profilePicture} width=\"300\" height=\"300\"/>\n\n                }\n              </div>\n              <div className=\"card-body\">\n                <a href=\"https://www.facebook.com/jm.lagunzad/\">Jm Lagunzad</a>\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                Write a post\n              </div>\n              <div className=\"card-body\">\n                <textarea value={postText}\n                          onChange={event => {\n                            setPostText(event.target.value)\n                          }}\n                          placeholder=\"What's on your mind?\">\n                </textarea>\n                <br/>\n                <button className=\"btn btn-success\" \n                        onClick={() => {\n                          if(postText === ''){\n                            return;\n                          }\n\n                          posts.push({id: 0, word: postText})\n                          setPosts(posts)\n                          setPostText('');\n                        }}\n                >Post</button>\n              </div>\n            </div>\n            <br/>\n            <div className=\"card\">\n              <div className=\"card-header\">\n                News Feed\n              </div>\n              {\n                //users.map((user: UserInfo, idx: number) => {\n                \n                posts.map( (post: Post, idx: number) => {\n                  // if(post === ''){\n                  //   return;\n                  // }\n\n                  if(editMode){\n                    if(idx === editPostId){\n                        return (\n                          <div className=\"card\" key={idx}>\n                            <div className=\"card-header\">\n                              <button className=\"btn btn-primary\"\n                                onClick={() => {\n                                  const newPosts = [...posts];\n                                  newPosts[idx].word = tempPost;\n                                  setPosts(newPosts);\n                                  setEditMode(false);\n                                  setEditPostId(0);\n                                  //setEditModal(!editModal)\n                                  //setPosts(newPosts);\n                                }}\n                              >Confirm Changes</button>\n                              <button className=\"btn btn-danger m-2\"\n                                onClick={() => {\n                                  setEditMode(false);\n                                  setEditPostId(0);\n                                }}\n                              >Cancel</button>\n                            </div>\n                            <div className=\"card-body\">\n                              <blockquote className=\"blockquote mb-0\">\n                              <textarea value={tempPost}\n                                        onChange={event => {\n                                          setTempPost(event.target.value)\n                                        }}\n                                        placeholder=\"Edit this post\">\n                              </textarea>\n                              </blockquote>\n                            </div>\n                          </div>\n                        )\n                    }\n                  }\n\n                  return (\n                    <div className=\"card\" key={idx}>\n                      <div className=\"card-header\">\n                        <button className=\"btn btn-warning\"\n                          onClick={() => {\n                            setEditMode(true);\n                            setEditPostId(idx);\n                            setTempPost(post.word);\n                          }}\n                        >Edit</button>\n                        <button className=\"btn btn-danger m-2\"\n                          onClick={() => {\n                            const newPosts = [...posts];\n                            newPosts.splice(idx,1);\n                            setPosts(newPosts);\n                          }}\n                        >Delete</button>\n                      </div>\n                      <div className=\"card-body\">\n                        <blockquote className=\"blockquote mb-0\">\n                          <p>{post.word}</p>\n                        </blockquote>\n                      </div>\n                    </div>\n                  )\n                  \n\n\n                })\n              }\n            </div>\n          </div>\n          <div className=\"col-3\">\n            <div className=\"card\">\n              <div className=\"card-header\">\n                Online Friends\n              </div>\n              <div className=\"card-body\">\n                <blockquote className=\"blockquote mb-0\">\n                  <ChatList users={users}/> \n                </blockquote>\n              </div>   \n            </div>\n          </div>\n        </div>\n        {/* {editModal ? (\n          <Modal\n            post={postText}\n            toggle={() => {\n              setEditModal(!editModal)\n            }}\n            onSave={() =>{\n              setEditModal(!editModal)\n            }}\n            />\n        ): null} */}\n      </div>\n    </div>\n \n    \n  );\n}\n","C:\\Users\\may02\\Desktop\\React Practice\\type-chat-app\\src\\reportWebVitals.ts",[],"C:\\Users\\may02\\Desktop\\React Practice\\type-chat-app\\src\\index.tsx",["35"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport NavBar from \"./components/navbar\";\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <NavBar />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","C:\\Users\\may02\\Desktop\\React Practice\\type-chat-app\\src\\components\\Modal.js",[],"C:\\Users\\may02\\Desktop\\React Practice\\type-chat-app\\src\\About.js",["36"],"import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nfunction About({ match }) {\r\n    console.log(match)\r\n    return (\r\n        <div>\r\n            <h1>About Page</h1>\r\n            <h1>{match.params.name}</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","C:\\Users\\may02\\Desktop\\React Practice\\type-chat-app\\src\\components\\navbar.jsx",["37"],"import React, { Component } from 'react';\r\nimport App from \"../App\";\r\nimport About from \"../About\";\r\n\r\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\r\n\r\n\r\nconst styleLink = {\r\n    color: 'white'\r\n};\r\n\r\nconst NavBar = () => {\r\n\r\n    console.log('NavBar - Rendered');\r\n  \r\n    return (\r\n    <Router>\r\n        <div>\r\n            <nav className=\"navbar navbar-dark bg-dark\">\r\n            <div>\r\n                <Link style={styleLink} to=\"/\" className=\"navbar-brand\">\r\n                    MyProfile\r\n                </Link>\r\n                <Link style={styleLink} to=\"/about\">\r\n                    About\r\n                </Link>\r\n            </div>\r\n            </nav>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={App} />\r\n                <Route path=\"/about\" exact component={About} />\r\n                <Route path=\"/about/:name\" component={About} />\r\n            </Switch>\r\n        </div> \r\n    </Router>\r\n    \r\n      \r\n      );\r\n};\r\n\r\nexport default NavBar;",{"ruleId":"38","severity":1,"message":"39","line":4,"column":8,"nodeType":"40","messageId":"41","endLine":4,"endColumn":13},{"ruleId":"38","severity":1,"message":"42","line":52,"column":11,"nodeType":"40","messageId":"41","endLine":52,"endColumn":19},{"ruleId":"43","severity":1,"message":"44","line":80,"column":7,"nodeType":"45","endLine":80,"endColumn":37},{"ruleId":"46","severity":1,"message":"47","line":128,"column":49,"nodeType":"48","messageId":"49","endLine":128,"endColumn":51},{"ruleId":"43","severity":1,"message":"44","line":170,"column":29,"nodeType":"45","endLine":170,"endColumn":93},{"ruleId":"38","severity":1,"message":"50","line":4,"column":8,"nodeType":"40","messageId":"41","endLine":4,"endColumn":11},{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":26},{"ruleId":"51","severity":1,"message":"52","line":1,"column":17,"nodeType":"40","messageId":"41","endLine":1,"endColumn":26},"@typescript-eslint/no-unused-vars","'About' is defined but never used.","Identifier","unusedVar","'ItemList' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'App' is defined but never used.","no-unused-vars","'Component' is defined but never used."]